Majority of the programers like to have control over the language they are working on. More specifically, they would like to restrict the usage of certain snippets in their code . We are solving this problem by allowing the users to set rules which define the parts in the code that need to be flagged whenever found. These rules are written in a predefined language which are parsed and then used to search in the AST to find the matching patterns. Matching in AST gives more power to the user over using regular expressions. These rules can be set to make him follow general guidelines while writing the code. We have used pycparser to generate the AST and depth first search traversal to traverse in the tree. We have made two approaches to the problem, one was generating the code for all the rules and the other was checking the rules as we traversed the AST.  
